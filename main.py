import telebot
from telebot import types

bot = telebot.TeleBot("–¢–í–û–ô_–¢–û–ö–ï–ù")  # <-- —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω

questions = [
    {
        "question": "üåÄ –ö–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –º–∏—Ä –≤–Ω—É—Ç—Ä–∏ —Ç–µ–±—è?",
        "images": ["1A.jpg", "1B.jpg", "1C.jpg"],
        "options": ["1A", "1B", "1C"]
    },
    {
        "question": "üåç –ö–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –º–∏—Ä –≤–æ–∫—Ä—É–≥ —Ç–µ–±—è?",
        "images": ["2A.jpg", "2B.jpg", "2C.jpg"],
        "options": ["2A", "2B", "2C"]
    }
]

descriptions = {
    "1A": "–¢—ã —Å–ø–æ–∫–æ–π–Ω–∞ –∏ —Ü–µ–Ω–∏—à—å –≥–∞—Ä–º–æ–Ω–∏—é.",
    "1B": "–¢—ã –¥–∏–Ω–∞–º–∏—á–Ω–∞, –ª—é–±–∏—à—å –ø–µ—Ä–µ–º–µ–Ω—ã.",
    "1C": "–¢—ã –∑–∞–≥–∞–¥–æ—á–Ω–∞ –∏ –ª—é–±–∏—à—å —É–µ–¥–∏–Ω–µ–Ω–∏–µ.",
    "2A": "–ú–∏—Ä –¥–ª—è —Ç–µ–±—è ‚Äî —ç—Ç–æ –ø–æ—Ä—è–¥–æ–∫ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞.",
    "2B": "–¢—ã –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—à—å –º–∏—Ä —á–µ—Ä–µ–∑ —á—É–≤—Å—Ç–≤–∞ –∏ –∏–Ω—Ç—É–∏—Ü–∏—é.",
    "2C": "–¢—ã –∑–∞–º–µ—á–∞–µ—à—å —Ç–æ–Ω–∫–æ—Å—Ç–∏ –∏ –ª—é–±–∏—à—å –¥–µ—Ç–∞–ª–∏."
}

user_data = {}

@bot.message_handler(commands=['start'])
def start(message):
    user_data[message.chat.id] = []
    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç! –°–µ–π—á–∞—Å –º—ã –ø—Ä–æ–≤–µ–¥—ë–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É.")
    send_question(message.chat.id, 0)

def send_question(chat_id, q_index):
    if q_index >= len(questions):
        show_result(chat_id)
        return

    question = questions[q_index]
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for i, option in enumerate(question["options"]):
        markup.add(str(i + 1))

    bot.send_message(chat_id, question["question"])

    for i, image in enumerate(question["images"]):
        with open(image, 'rb') as photo:
            bot.send_photo(chat_id, photo, caption=f"{i+1}")

    bot.register_next_step_handler_by_chat_id(chat_id, lambda msg: handle_answer(msg, q_index))

def handle_answer(message, q_index):
    try:
        index = int(message.text) - 1
        selected_option = questions[q_index]["options"][index]
        user_data[message.chat.id].append(selected_option)
        send_question(message.chat.id, q_index + 1)
    except:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ —Ü–∏—Ñ—Ä—É 1, 2 –∏–ª–∏ 3.")
        send_question(message.chat.id, q_index)

def show_result(chat_id):
    result = "üîÆ –í–æ—Ç —Ç–≤–æ—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:\n\n"
    for code in user_data[chat_id]:
        result += f"üñº {descriptions[code]}\n"
    bot.send_message(chat_id, result)

bot.polling()
